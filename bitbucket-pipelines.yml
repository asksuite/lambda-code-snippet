image: node:14.15.4

pipelines:
  branches:
    master:
      - step:
          name: Deploy to AWS
          deployment: production
          caches:
            - node
          script:
            - npm install --no-package-lock
            - cp .env.example .env
            - sed -i "s/API_KEY_GOOGLE_TRANSLATE=/API_KEY_GOOGLE_TRANSLATE=$API_KEY_GOOGLE_TRANSLATE/g" .env
            - sed -i "s/SERVICE_NAME=/SERVICE_NAME=asksuite-lambda-function/g" .env
            - npm run test
            - npm run deploy
      - step:
          name: Push on GitHub
          caches:
            - node
          script:
            - rm bitbucket-pipelines.yml
            - sed -i "s/SERVICE_NAME=/SERVICE_NAME=lambda-code-snippet/g" .env.example

            - COMMIT_MESSAGE=`git log --format=%B -n 1 $BITBUCKET_COMMIT`

            - echo $COMMIT_MESSAGE

            # Add SSH keys for deployment
            - mkdir -p ~/.ssh
            - echo $SSH_KEY | base64 -d > ~/.ssh/id_rsa
            - chmod 600 ~/.ssh/id_rsa

            # Deploy
            - echo "Up to GitHub"
            - git init
            - git config --global user.email "dev@asksuite.com"
            - git config --global user.name "Asksuite"
            - git remote add origin_github $GITHUB_REMOTE_REPO_URL
            - git add .
            - git commit -m "$COMMIT_MESSAGE"
            - git push -u --force origin_github master # Set upstream
